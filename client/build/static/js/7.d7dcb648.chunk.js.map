{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button-component.jsx","pages/checkout/checkout.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key"],"mappings":"8MAoDeA,G,OAAAA,YAAQ,MANI,SAACC,GAAD,MAAe,CACxCC,UAAW,SAACC,GAAD,OAAUF,EAASG,YAAkBD,KAChDE,QAAS,SAACF,GAAD,OAAUF,EAASI,YAAQF,KACpCG,WAAY,SAACH,GAAD,OAAUF,EAASK,YAAWH,QAG7BH,EA1CM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAE/B,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKC,IAAKJ,EAAUK,IAAI,UAE1B,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACd,yBACEA,UAAU,QACVG,QAAS,WACPT,EAAWC,KAHf,UAQA,0BAAMK,UAAU,SAASD,GACzB,yBACEC,UAAU,QACVG,QAAS,WACPV,EAAQE,KAHZ,WASF,0BAAMK,UAAU,SAASF,GACzB,yBAAKE,UAAU,gBAAgBG,QAAS,kBAAMb,EAAUK,KAAxD,e,oCCMSS,EAzCc,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACxBO,EAAyB,IAARP,EAwBvB,OACE,kBAAC,IAAD,CACEQ,MAAM,UACNV,KAAK,oBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,sCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA9BY,SAACA,GACfC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQN,EACRQ,WAGDK,MAAK,SAACC,GACLC,MAAM,yBAEPC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,mGAgBJK,UAjCF,iH,QCuCEC,G,OAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,OAGM3C,sBAAQsC,EAARtC,EAvCM,SAAC,GAAD,IAAGwC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACnB,yBAAK9B,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,0CAEF,yBAAKA,UAAU,gBACb,8CAEF,yBAAKA,UAAU,gBACb,2CAEF,yBAAKA,UAAU,gBACb,wCAEF,yBAAKA,UAAU,gBACb,0CAGH4B,EAAUI,KAAI,SAACrC,GAAD,OACb,kBAAC,EAAD,CAAcsC,IAAKtC,EAASC,KAAMD,SAAUA,OAE9C,yBAAKK,UAAU,SACb,yCAAe8B,IAEjB,yBAAK9B,UAAU,gBAAf,2DAEE,6BAFF,8CAKA,kBAAC,EAAD,CAAsBF,MAAOgC","file":"static/js/7.d7dcb648.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  addItem,\r\n  clearItemFromCart,\r\n  removeItem,\r\n} from \"../../redux/cart/cart.actions\";\r\nimport \"./checkout-item.styles.scss\";\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n\r\n  return (\r\n    <div className=\"checkout-item\">\r\n      <div className=\"image-container\">\r\n        <img src={imageUrl} alt=\"item\" />\r\n      </div>\r\n      <span className=\"name\">{name}</span>\r\n      <span className=\"quantity\">\r\n        <div\r\n          className=\"arrow\"\r\n          onClick={() => {\r\n            removeItem(cartItem);\r\n          }}\r\n        >\r\n          &#10094;\r\n        </div>\r\n        <span className=\"value\">{quantity}</span>\r\n        <div\r\n          className=\"arrow\"\r\n          onClick={() => {\r\n            addItem(cartItem);\r\n          }}\r\n        >\r\n          &#10095;\r\n        </div>\r\n      </span>\r\n      <span className=\"price\">{price}</span>\r\n      <div className=\"remove-button\" onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\r\n  addItem: (item) => dispatch(addItem(item)),\r\n  removeItem: (item) => dispatch(removeItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey =\r\n    \"pk_test_51Hvk6tI6iSFuzOMZbjyhjJ9UqVXAcMOSOF2O3DgqpAAzXa3PlZVgVRZWQf9JyIH17gwseOnC4u1hFWp1GKL6ZgOt00vDDI1pr7\";\r\n\r\n  const onToken = (token) => {\r\n    axios({\r\n      url: \"payment\",\r\n      method: \"POST\",\r\n      data: {\r\n        amount: priceForStripe,\r\n        token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        alert(\"Payment successful\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Payment error: \", error);\r\n        alert(\r\n          \"There was an issue with your payment. Please be sure that you used the provided credit card\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label=\"Pay Now\"\r\n      name=\"Cool Clothing ltd\"\r\n      billingAddress\r\n      shippingAddress\r\n      image=\"https://sendeyo.com/up/d/f3eb2117da\"\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel=\"Pay Now\"\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button-component\";\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cart.selector\";\r\nimport \"./checkout.styles.scss\";\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n  <div className=\"checkout-page\">\r\n    <div className=\"checkout-header\">\r\n      <div className=\"header-block\">\r\n        <span>Product</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Description</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Quantity</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Price</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Remove</span>\r\n      </div>\r\n    </div>\r\n    {cartItems.map((cartItem) => (\r\n      <CheckoutItem key={cartItem.name} cartItem={cartItem} />\r\n    ))}\r\n    <div className=\"total\">\r\n      <span>TOTAL: ${total}</span>\r\n    </div>\r\n    <div className=\"test-warning\">\r\n      *Please use the following test credit card for payments*\r\n      <br />\r\n      4242 4242 4242 4242 - Exp: 1/22 - CVV: 123\r\n    </div>\r\n    <StripeCheckoutButton price={total} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"],"sourceRoot":""}