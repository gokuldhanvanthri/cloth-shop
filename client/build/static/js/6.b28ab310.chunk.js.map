{"version":3,"sources":["pages/collection/collectionpage.jsx","pages/collection/collectionpage-container.jsx","redux/shop/shop.selector.js","components/withSpinner/withSpinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/CollectionItem.jsx"],"names":["EMPTY_OBJ","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","className","map","item","CollectionItem","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionLoaded","CollectionPageContainer","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","values","collectionURLParam","selectIsCollectionFetch","isFetching","withSpinner","WrappedComponent","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","onClick","inverted"],"mappings":"gNAOMA,G,OAAY,IAqBHC,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAnBQ,SAAC,GAAgC,IAAD,IAA7BG,kBAA6B,MAAhBJ,EAAgB,EAC7CS,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MAEf,OACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,SAASF,GACvB,yBAAKE,UAAU,SACZD,EAAME,KAAI,SAACC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAgBC,IAAKF,EAAKG,GAAIH,KAAMA,YCTxCI,EAAkBC,YAAyB,CAC/CC,UAAW,SAACjB,GAAD,OAAYkB,YAAyBlB,MAG5CmB,EAA0BC,YAC9BrB,YAAQgB,GACRM,IAF8BD,CAG9BE,GAEaH,a,gCCjBf,mJAEMI,EAAa,SAACvB,GAAD,OAAWA,EAAMwB,MAEvBC,EAAoBC,YAC/B,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OAAkBA,EAAcE,OAAOC,OAAOH,GAAe,MAGlDxB,EAAmB,SAAC4B,GAAD,OAC9BL,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYI,GAAsB,SAGvCC,EAA0BN,YACrC,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKS,cAGJf,EAA2BQ,YACtC,CAACH,IACD,SAACC,GAAD,QAAYA,EAAKG,gB,oEClBJO,IAJK,SAACC,GAAD,OAAsB,YAAmC,IAAhClB,EAA+B,EAA/BA,UAAcmB,EAAiB,6BAC1E,OAAOnB,EAAY,kBAAC,IAAD,MAAc,kBAACkB,EAAqBC,M,w9CCFlD,IAAMC,EAA0BC,IAAOC,IAAV,KA6BvBC,EAAYF,YAAOG,IAAPH,CAAH,KAcTI,EAAkBJ,IAAOC,IAAV,KAMN,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,KAQzBM,EAAgBP,IAAOQ,KAAV,KAKbC,EAAiBT,IAAOQ,KAAV,KCjCZ/C,gBAAQ,MAJI,SAACiD,GAAD,MAAe,CACxCC,QAAS,SAACtC,GAAD,OAAUqC,EAASC,YAAQtC,QAGvBZ,EArBQ,SAAC,GAAuB,IAArBY,EAAoB,EAApBA,KAAMsC,EAAc,EAAdA,QACtBC,EAA0BvC,EAA1BuC,KAAMC,EAAoBxC,EAApBwC,MAAOR,EAAahC,EAAbgC,SAErB,OACE,kBAACN,EAAD,KACE,kBAACK,EAAD,CAAiBjC,UAAU,QAAQkC,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,KAAiBI,IAEnB,kBAACX,EAAD,CAAWY,QAAS,kBAAMH,EAAQtC,IAAO0C,UAAQ,GAAjD","file":"static/js/6.b28ab310.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionItem from \"../../components/collection-item/CollectionItem\";\r\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\r\nimport \"./collection.styles.scss\";\r\n\r\nconst EMPTY_OBJ = {};\r\n\r\nconst CollectionPage = ({ collection = EMPTY_OBJ }) => {\r\n  const { title, items } = collection;\r\n\r\n  return (\r\n    <div className=\"collection-page\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      <div className=\"items\">\r\n        {items.map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { selectIsCollectionLoaded } from \"../../redux/shop/shop.selector\";\r\nimport WithSpinner from \"../../components/withSpinner/withSpinner.component\";\r\nimport CollectionPage from \"./collectionpage\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: (state) => !selectIsCollectionLoaded(state),\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) => (collections ? Object.values(collections) : [])\r\n);\r\n\r\nexport const selectCollection = (collectionURLParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionURLParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetch = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n","import React from \"react\";\r\n\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nconst withSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default withSpinner;\r\n","import styled from \"styled-components\";\r\nimport CustomButton from \"../button/button\";\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer,\r\n} from \"./collection-item.styles\";\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n"],"sourceRoot":""}